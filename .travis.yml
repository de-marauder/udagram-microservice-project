#  Language
language: node_js
node_js:
  - 13

# Build docker images using docker-compose
services:
  - docker

# Pre-testing installs
install:
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - docker-compose --version

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker-compose -f docker-compose-build.yaml build --parallel .
  - docker tag udagram-frontend "$DOCKER_USERNAME"/udagram-frontend:latest
  - docker tag udagram-api-user "$DOCKER_USERNAME"/udagram-api-user:latest
  - docker tag udagram-api-feed "$DOCKER_USERNAME"/udagram-api-feed:latest
  - docker tag reverseproxy "$DOCKER_USERNAME"/reverseproxy:latest

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push "$DOCKER_USERNAME"/udagram-frontend
  - docker push "$DOCKER_USERNAME"/udagram-api-user
  - docker push "$DOCKER_USERNAME"/udagram-api-feed
  - docker push "$DOCKER_USERNAME"/reverseproxy
